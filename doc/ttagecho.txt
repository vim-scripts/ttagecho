*ttagecho.txt*      Show current tag information (echo area or balloon)
                    Author: Thomas Link, micathom at gmail com

This plugin is similar to echofunc (vimscript #1735) to which it owes 
much inspiration and two lines of code. It displays some information 
about the tag under the cursor or mouse pointer either in the echo area 
or as balloon help (see |g:ttagecho_balloon_patterns|). If there are 
more than one tags that match, you can loop through the tags by invoking 
the respective commands repeatedly.

If hookcursormoved (vimscript #2037, version >= 0.4) is installed, for 
certain filetypes (see |g:ttagecho_parentheses_patterns|) it will 
display the information in the echo area also if the cursor moves over a 
round parenthesis.

If you don't like the default format for the tags, you can define the 
function TTagechoFormat_{&filetype}(a:tag) that should return some nicely 
formatted information.


-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties or use vim 7.0, 
please make sure, you have the current version of vimball (vimscript 
#1502) installed.

Suggested maps (to be set in ~/.vimrc): >
    noremap <Leader>g+ :TTagechoWord<cr>
    noremap <Leader>g* :TTagechoWord!<cr>
    noremap <Leader>g? :TTagechoWords!<cr>


------------------------------------------------------------------------
Contents~

    plugin/ttagecho.vim
        g:ttagecho_parentheses_patterns ... |g:ttagecho_parentheses_patterns|
        g:ttagecho_balloon_patterns ....... |g:ttagecho_balloon_patterns|
        g:ttagecho_substitute ............. |g:ttagecho_substitute|
        g:ttagecho_restore_showmode ....... |g:ttagecho_restore_showmode|
        g:ttagecho_more_tags .............. |g:ttagecho_more_tags|
        g:ttagecho_balloon_limit .......... |g:ttagecho_balloon_limit|
        :TTagecho ......................... |:TTagecho|
        :TTagechoAll ...................... |:TTagechoAll|
        :TTagechoWord ..................... |:TTagechoWord|
        :TTagechoWords .................... |:TTagechoWords|
    autoload/ttagecho.vim
        ttagecho#Expr ..................... |ttagecho#Expr()|
        ttagecho#Echo ..................... |ttagecho#Echo()|
        ttagecho#EchoWord ................. |ttagecho#EchoWord()|
        ttagecho#EchoWords ................ |ttagecho#EchoWords()|
        ttagecho#OverParanthesis .......... |ttagecho#OverParanthesis()|
        ttagecho#Balloon .................. |ttagecho#Balloon()|


------------------------------------------------------------------------
plugin/ttagecho.vim~

                                                    *g:ttagecho_parentheses_patterns*
g:ttagecho_parentheses_patterns (default: [])
    If hookcursormoved (vimscript #) is installed, display tag 
    information when moving over parantheses for these filetypes.

                                                    *g:ttagecho_balloon_patterns*
g:ttagecho_balloon_patterns    (default: g:ttagecho_parentheses_patterns )
    Set 'balloonexpr' for buffers that match these patterns.

                                                    *g:ttagecho_substitute*
g:ttagecho_substitute          (default: {})
    Filter the expression through |substitute()| for these filetypes. 
    This applies only if the tag cmd field (see |taglist()|) is used.

                                                    *g:ttagecho_restore_showmode*
g:ttagecho_restore_showmode    (default: 0)
    If 'showmode' is set, |ttagecho#OverParanthesis()| will temporarily 
    unset the option when triggered in insert mode. The original value 
    will be restored on the next CursorHold(I) events.
    Set this variable to -1, if you don't want this to happen. In this 
    case you might need to set 'cmdheight' to something greater than 1.

                                                    *g:ttagecho_more_tags*
g:ttagecho_more_tags           (default: '')
    A comma-separated list of additional tag files (see 'tags') that will 
    be used, when invoked with a <bang>. Can also be buffer-local.
    This variable can be used to scan voluminous tag files (eg general 
    SDK/standard library tags) only when really needed while normally 
    using the project tags only.

                                                    *g:ttagecho_balloon_limit*
g:ttagecho_balloon_limit       (default: &lines  )

                                                    *:TTagecho*
TTagecho[!] [TAGS_RX]
    Show the tag in the echo area. If invoked repeatedly, this command 
    will loop through matching tags.

                                                    *:TTagechoAll*
TTagechoAll[!] [TAGS_RX]
    Show all matches.

                                                    *:TTagechoWord*
TTagechoWord[!]
    Show information for the word under cursor.

                                                    *:TTagechoWords*
TTagechoWords[!]
    Show all matches for the word under cursor.


------------------------------------------------------------------------
autoload/ttagecho.vim~

                                                    *ttagecho#Expr()*
ttagecho#Expr(rx, ...)

                                                    *ttagecho#Echo()*
ttagecho#Echo(rx, many_lines, bang)

                                                    *ttagecho#EchoWord()*
ttagecho#EchoWord(bang)

                                                    *ttagecho#EchoWords()*
ttagecho#EchoWords(bang)

                                                    *ttagecho#OverParanthesis()*
ttagecho#OverParanthesis(mode)

                                                    *ttagecho#Balloon()*
ttagecho#Balloon()


